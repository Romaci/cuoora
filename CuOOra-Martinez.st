Object subclass: #CuooraSamplerLoader	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-samples'!!CuooraSamplerLoader methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 19:08'!loadExamplesIn: unSistema	| pedro juan diego oo1 tu st p1 p2 colT colT1 |	colT := OrderedCollection new.	colT1 := OrderedCollection new.	pedro := unSistema		crearUsuario: 'pedro@cuoora.com'		contrasenia: 'pedro@cuoora.com'.	diego := unSistema		crearUsuario: 'diego@cuoora.com'		contrasenia: 'diego@cuoora.com'.	juan := unSistema		crearUsuario: 'juan@cuoora.com'		contrasenia: 'juan@cuoora.com'.	juan agregarSeguido: diego.	pedro agregarSeguido: juan.		oo1 := unSistema agregarTopico: 'OO1' Descripcion: 'oo1'.	tu := unSistema agregarTopico: 'Test de unidad' Descripcion: 'tu'.	st := unSistema agregarTopico: 'SmallTalk' Descripcion: ''.	colT add: oo1.	colT add: tu.	colT1 add: st.	colT1 add: oo1.	p1 := unSistema		agregarPreguntaConTopico: colT		Titulo: 'Metodos SetUp'		Descripcion: '¿Para qué sirve el método SetUp?'		YAutor: pedro.	p1		agregarRespuestaConTexto:			'Sirve para instanciar los objetos que son evaluados por el test en un único método y que se ejecute siempre antes de cada test.'		yAutor: diego.	p2 := unSistema		agregarPreguntaConTopico: colT1		Titulo: 'Mensajes'		Descripcion: '¿Qué significa #messageNotUnderstood?'		YAutor: diego.	p2		agregarRespuestaConTexto:			'Significa que el objeto que recibió el mensaje no encontró ningún método para ejecutar en respuesta.'		yAutor: pedro! !Object subclass: #Post	instanceVariableNames: 'fecha votos autor'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Model'!!Post methodsFor: 'accessing' stamp: 'Rocio 4/1/2020 20:39'!autor	^autor.! !!Post methodsFor: 'accessing' stamp: 'Rocio 5/18/2020 01:28'!votosPositivosself votos isEmpty ifTrue:[^nil].^ self votos select:[:voto| voto like].! !!Post methodsFor: 'accessing' stamp: 'Rocio 5/18/2020 01:43'!cantVotosPositivos^ (self votos select: [:voto| voto like]) size.! !!Post methodsFor: 'accessing' stamp: 'Rocio 5/18/2020 04:36'!cantVotosNegativos^ (self votos reject:  [ :each| each like]) size.! !!Post methodsFor: 'accessing' stamp: 'Rocio 5/18/2020 01:07'!votos^votos.! !!Post methodsFor: 'accessing' stamp: 'Anonymous 5/21/2020 19:53'!fecha		^fecha.! !!Post methodsFor: 'accessing' stamp: 'Rocio 5/18/2020 01:28'!votosNegativosself votos isEmpty ifTrue:[^nil].^ self votos reject:  [:voto| voto like].! !!Post methodsFor: 'as yet unclassified' stamp: 'Rocio 5/18/2020 01:38'!calcularPuntaje   	(self votos isEmpty) 	ifTrue:[^0.].	^self cantVotosPositivos - self cantVotosNegativos.! !!Post methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 20:56'!conAutor: unUsuario	fecha:= DateAndTime now. 	autor:= unUsuario.	votos:= OrderedCollection new.! !!Post methodsFor: 'as yet unclassified' stamp: 'Rocio 5/18/2020 03:49'!registrarDisLikeDe: unUsuario  |ok|  ok:= true. self votosNegativos isNil ifFalse: [(self votosNegativos anySatisfy: [ :each| each autor = unUsuario])ifTrue:[ok:=false.		^ok]]. self votosPositivos isNil ifFalse:[ (self votosPositivos select: [:each| each autor = unUsuario])	ifNotNil:[:it| votos removeAll: it]].	votos add:(Voto inicializarCon: unUsuario yCon: false).  ^ok.! !!Post methodsFor: 'as yet unclassified' stamp: 'Rocio 5/18/2020 01:37'!registrarLikeDe: unUsuario |ok|  ok:= true. self votosPositivos  isNil ifFalse: [(self votosPositivos anySatisfy: [ :each| each autor = unUsuario])ifTrue:[^ (ok:=false)]]. self votosNegativos isNil ifFalse:[ (self votosNegativos select: [:each| each autor = unUsuario])	ifNotNil:[:it| votos removeAll: it].].	votos add:(Voto inicializarCon: unUsuario yCon: true).  ^ok.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Post class	instanceVariableNames: ''!!Post class methodsFor: 'as yet unclassified' stamp: 'Rocio 5/18/2020 00:55'!inicializarConAutor: unUsuario. ^ self new conAutor:unUsuario.! !Post subclass: #Pregunta	instanceVariableNames: 'titulo descripcion respuestas topicos'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Model'!!Pregunta methodsFor: 'as yet unclassified' stamp: 'Rocio 5/18/2020 12:59'!agregarRespuestaConTexto: unTexto yAutor:unUsuario		|unaResp|		unaResp:= Respuesta inicializarconTexto: unTexto pregunta: self yAutor:unUsuario.	respuestas add:unaResp.	unUsuario agregarRespuesta: unaResp.		^unaResp.! !!Pregunta methodsFor: 'as yet unclassified' stamp: 'Rocio 4/26/2020 12:11'!configurarTopico: unTopico	|topicosIngresados|		topicosIngresados := unTopico substrings: ','.		! !!Pregunta methodsFor: 'as yet unclassified' stamp: 'Rocio 5/18/2020 04:23'!respuestasDe: unUsuario				^ respuestas select:[:respuesta| respuesta autor = unUsuario].		! !!Pregunta methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 20:56'!ConTopico: unTopico Titulo: unTitulo Descripcion: unaDescrip yAutor: unUsuario.	fecha:= DateAndTime now.	topicos addAll: unTopico.	titulo:= unTitulo.	descripcion:= unaDescrip.	autor:= unUsuario.	! !!Pregunta methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 19:41'!autor	^autor ! !!Pregunta methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 20:09'!descripcion 	^descripcion.! !!Pregunta methodsFor: 'accessing' stamp: 'Rocio 4/2/2020 11:39'!respuestas^respuestas.! !!Pregunta methodsFor: 'accessing' stamp: 'Rocio 4/1/2020 19:17'!topicos	^topicos.! !!Pregunta methodsFor: 'accessing' stamp: 'Anonymous 5/21/2020 20:42'!respuestasMayorMenor^respuestas asSortedCollection: [ :resp1 :resp2 | resp1 calcularPuntaje > resp2 calcularPuntaje ].! !!Pregunta methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 20:08'!titulo	^titulo! !!Pregunta methodsFor: 'initialization' stamp: 'Rocio 5/17/2020 19:09'!initialize   votos:= OrderedCollection new.	topicos:= OrderedCollection new.	respuestas:=OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pregunta class	instanceVariableNames: ''!!Pregunta class methodsFor: 'as yet unclassified' stamp: 'Rocio 4/1/2020 11:14'!inicializarConTopico: unTopico Titulo: unTitulo Descripcion: unaDescrip yAutor: unUsuario. ^ self new ConTopico: unTopico Titulo: unTitulo Descripcion: unaDescrip yAutor: unUsuario.! !Post subclass: #Respuesta	instanceVariableNames: 'texto pregunta'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Model'!!Respuesta methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 20:48'!texto	^texto! !!Respuesta methodsFor: 'accessing' stamp: 'Rocio 5/17/2020 18:35'!pregunta	^pregunta.! !!Respuesta methodsFor: 'initialization' stamp: 'Rocio 5/17/2020 19:07'!initialize 	votos:= OrderedCollection new.! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 20:52'!conTexto: unTexto yAutor:unUsuario.	fecha:= DateAndTime  today.	texto:=unTexto.	autor:= unUsuario.	! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 21:30'!conTexto: unTexto pregunta: unaPregunta yAutor:unUsuario.	fecha:= DateAndTime  today.	pregunta:=unaPregunta.	texto:=unTexto.	autor:= unUsuario.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Respuesta class	instanceVariableNames: ''!!Respuesta class methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 18:34'!inicializarconTexto: unTexto pregunta: unaPregunta yAutor:unUsuario^self new conTexto: unTexto pregunta: unaPregunta yAutor:unUsuario.! !Object subclass: #SistemaCuoora	instanceVariableNames: 'usuarios topicos preguntas'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Model'!!SistemaCuoora methodsFor: 'accessing' stamp: 'Rocio 4/26/2020 20:12'!topicos^topicos.! !!SistemaCuoora methodsFor: 'accessing' stamp: 'Rocio 5/17/2020 23:20'!preguntas	^preguntas.! !!SistemaCuoora methodsFor: 'initialization' stamp: 'Rocio 4/1/2020 11:14'!initialize	usuarios:= OrderedCollection new.	preguntas:= OrderedCollection new.	topicos:= OrderedCollection new.	! !!SistemaCuoora methodsFor: 'acccessing' stamp: 'Rocio 4/17/2020 21:07'!usuarios	"comment stating purpose of message"	^usuarios.! !!SistemaCuoora methodsFor: 'as yet unclassified' stamp: 'Rocio 4/1/2020 11:14'!agregarTopico: unNombre Descripcion: unaDesc	| unTopico |	unTopico:= Topico inicializarConNombre: unNombre yDescripcion: unaDesc.	topicos add: unTopico.	^unTopico.! !!SistemaCuoora methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 22:30'!obtenerPreguntasRelevantes: unUsuario"Este método recorre la colección de preguntas y selecciona las que incluyen topicos de interes del usuario que entra por parámetro"^ preguntas select:  [ :pregunta | pregunta topicos includesAny: unUsuario  topicosInteres   ] ! !!SistemaCuoora methodsFor: 'as yet unclassified' stamp: 'Rocio 5/18/2020 03:09'!borrarPregunta: unaPregunta	preguntas remove: unaPregunta.	unaPregunta autor borrarPregunta: unaPregunta.	unaPregunta topicos do:[:each| each borrarPregunta: unaPregunta ].	unaPregunta respuestas do:[:respuesta| respuesta autor borrarRespuesta: respuesta].	! !!SistemaCuoora methodsFor: 'as yet unclassified' stamp: 'Rocio 4/1/2020 11:14'!crearUsuario: unNombre contrasenia: unaContrasenia		|unUsuario|	 unUsuario:= Usuario inicializarConNombre: unNombre yContrasenia: unaContrasenia. usuarios add: unUsuario. ^unUsuario ! !!SistemaCuoora methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 22:28'!obtenerRelevantesSeguidos: unUsuario^ preguntas select:  [ :pregunta | unUsuario seguidos  includes: pregunta autor]! !!SistemaCuoora methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 22:27'!preguntasRelevantesPara: unUsuario^ ((self obtenerPreguntasRelevantes: unUsuario) union: (self obtenerRelevantesSeguidos: unUsuario)) ! !!SistemaCuoora methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 18:41'!agregarPreguntaConTopico:unTopico Titulo: unTitulo Descripcion: unaDescrip YAutor: unUsuario		| unaPregunta |		unaPregunta := Pregunta inicializarConTopico: unTopico Titulo: unTitulo Descripcion: unaDescrip yAutor: unUsuario. 	preguntas add: unaPregunta.	topicos do: [:each| each agregarPregunta: unaPregunta ].	unUsuario agregarPregunta: unaPregunta.	^unaPregunta .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SistemaCuoora class	instanceVariableNames: 'soleInstance'!!SistemaCuoora class methodsFor: 'instance creation' stamp: 'Rocio 4/16/2020 00:20'!soleInstance 	"comment stating purpose of message"	soleInstance ifNil: [ soleInstance := self new ].	^soleInstance.! !!SistemaCuoora class methodsFor: 'as yet unclassified' stamp: 'Rocio 4/16/2020 00:21'!clearSoleInstance	"comment stating purpose of message"	soleInstance := nil.! !Object subclass: #Topico	instanceVariableNames: 'nombre descripcion preguntas'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Model'!!Topico methodsFor: 'initialization' stamp: 'Rocio 5/11/2020 17:05'!initialize preguntas:= OrderedCollection new. ! !!Topico methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 19:39'!nombre		^nombre.! !!Topico methodsFor: 'accessing' stamp: 'Rocio 5/17/2020 17:34'!preguntas 	^preguntas.! !!Topico methodsFor: 'as yet unclassified' stamp: 'Rocio 5/11/2020 17:29'!agregarPregunta: unaPregunta	preguntas add: unaPregunta.! !!Topico methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 23:47'!borrarPregunta:unaPregunta	self preguntas remove: unaPregunta.! !!Topico methodsFor: 'as yet unclassified' stamp: 'Rocio 4/1/2020 11:14'!conNombre:unNombre yDescripcion: unaDescripcion	nombre:= unNombre.	descripcion := unaDescripcion.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Topico class	instanceVariableNames: ''!!Topico class methodsFor: 'as yet unclassified' stamp: 'Rocio 4/1/2020 11:14'!inicializarConNombre: unNombre yDescripcion: unaDescripcion.^ self new conNombre:unNombre yDescripcion: unaDescripcion.! !Object subclass: #Usuario	instanceVariableNames: 'nombre contrasenia date seguidos topicosInteres preguntas respuestas'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Model'!!Usuario methodsFor: 'callbacks' stamp: 'Rocio 5/17/2020 22:46'!agregarRespuesta: unaRespself respuestas  add: unaResp.! !!Usuario methodsFor: 'accessing' stamp: 'Rocio 4/1/2020 19:22'!seguidos		^seguidos.! !!Usuario methodsFor: 'accessing' stamp: 'Rocio 5/17/2020 18:18'!respuestas	^respuestas! !!Usuario methodsFor: 'accessing' stamp: 'Rocio 5/17/2020 15:16'!preguntas	^preguntas.! !!Usuario methodsFor: 'accessing' stamp: 'Rocio 4/17/2020 21:11'!contrasenia		^contrasenia.! !!Usuario methodsFor: 'accessing' stamp: 'Rocio 5/18/2020 01:56'!totalPuntajeLikesDislikes	| totP totR |	totP := self preguntas isEmpty		ifTrue: [ 0 ]		ifFalse: [ self preguntas sum: [ :pregunta | pregunta calcularPuntaje ] ].	totR := self respuestas isEmpty		ifTrue: [ 0 ]		ifFalse: [ self respuestas sum: [ :respuesta | respuesta calcularPuntaje ] ].	^ totP + totR! !!Usuario methodsFor: 'accessing' stamp: 'Rocio 4/1/2020 19:21'!topicosInteres	^topicosInteres.! !!Usuario methodsFor: 'accessing' stamp: 'Rocio 4/17/2020 21:10'!nombre		^nombre.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 22:20'!agregarPregunta: unaPreguntaself preguntas add: unaPregunta.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 19:37'!agregarSeguido:unUsuario|ok| ok:=false. (seguidos anySatisfy: [ :each| each = unUsuario ]) ifFalse:[seguidos add: unUsuario.	ok:= true.]. ^ok.  	! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 21:33'!inicializar: unNombre yContrasenia: unaContrasenia.nombre:= unNombre.contrasenia := unaContrasenia.date:= DateAndTime.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 22:46'!borrarPregunta: unaPregunta self preguntas remove: unaPregunta.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 22:37'!estaRegistradoEnTopicos: unTopico	^(self topicosInteres  anySatisfy: [ :each| each = unTopico ]).! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 22:32'!agregarTopicoDeInteres: unTopicoself topicosInteres add: unTopico. ! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Rocio 5/18/2020 03:09'!borrarRespuesta: unaRespuesta self respuestas remove: unaRespuesta.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 21:22'!calcularPuntajeUsuario	|porPreguntas porRespuestas|		porPreguntas :=(self  preguntas isEmpty) ifTrue:[0]	ifFalse:[self preguntas size * 20].		porRespuestas := (self respuestas isEmpty) ifTrue: [0] 	ifFalse:[(self respuestas reject:[:each| (each pregunta autor) = self]) size *50].	"ifFalse:[1]."	^porPreguntas + porRespuestas + self totalPuntajeLikesDislikes.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 22:37'!estaRegistradoEnSeguidos: unUsuario^(self seguidos anySatisfy: [ :each| each = unUsuario ]).! !!Usuario methodsFor: 'initialization' stamp: 'Rocio 5/17/2020 20:13'!initialize		seguidos := OrderedCollection new.	topicosInteres := OrderedCollection new.	respuestas:= OrderedCollection new.	preguntas:= OrderedCollection new.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Usuario class	instanceVariableNames: ''!!Usuario class methodsFor: 'as yet unclassified' stamp: 'Rocio 4/1/2020 11:14'!inicializarConNombre: unNombre yContrasenia: unaContrasenia^self new inicializar: unNombre yContrasenia: unaContrasenia.! !Object subclass: #Voto	instanceVariableNames: 'like fecha autor'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Model'!!Voto methodsFor: 'accessing' stamp: 'Rocio 4/1/2020 11:29'!like	^like.! !!Voto methodsFor: 'accessing' stamp: 'Rocio 4/1/2020 11:23'!autor	^autor.! !!Voto methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 20:48'!crearVoto:boolean De:unAutor	fecha:= DateAndTime  today.	autor:= unAutor.	like:= boolean.! !!Voto methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 20:52'!crearVotoDe: unUsuario con: unLike.	fecha:= DateAndTime today.	autor:= unUsuario.	like:= unLike.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Voto class	instanceVariableNames: ''!!Voto class methodsFor: 'as yet unclassified' stamp: 'Rocio 4/1/2020 17:03'!inicializarVotoDe: unUsuario^self new crearVotoDe: unUsuario.! !!Voto class methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 19:55'!inicializarCon: unUsuario yCon: unLike^self new crearVotoDe: unUsuario con: unLike.! !!Voto class methodsFor: 'as yet unclassified' stamp: 'Rocio 5/17/2020 19:54'!inicializarVotoDe: unUsuario con: unLike^self new crearVotoDe: unUsuario con: unLike.! !WAComponent subclass: #AbstractUserHomeComponent	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-IU'!!AbstractUserHomeComponent methodsFor: 'callbacks' stamp: 'Rocio 4/19/2020 22:06'!cancelar	self answer.! !!AbstractUserHomeComponent methodsFor: 'callbacks' stamp: 'Rocio 5/18/2020 13:54'!detallePregunta:unaPregunta	self call: (DetallePreguntaComponent new inicializarCon: unaPregunta).	self answer.! !!AbstractUserHomeComponent methodsFor: 'callbacks' stamp: 'Anonymous 5/21/2020 14:14'!irPerfilUsuario: unUsuario	 self call: (PerfilUsuarioComponent new inicializarCon: unUsuario).	 self answer.! !!AbstractUserHomeComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 19:18'!logOut	self call: LoginUsuarioComponent new.! !!AbstractUserHomeComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 19:22'!nuevaPregunta	self call: (AgregarPreguntaComponent). ! !!AbstractUserHomeComponent methodsFor: 'rendering' stamp: 'Rocio 4/19/2020 18:03'!renderContentOn: aCanvas	self renderHeader: aCanvas.! !!AbstractUserHomeComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 19:08'!renderPregunta: unaPregunta en: aCanvas	aCanvas		tableRow: [ aCanvas 				paragraph: [ aCanvas  anchor						id:'tituloPreg';						callback: [ self detallePregunta: unaPregunta];						with: unaPregunta descripcion].			aCanvas 				paragraph: [ 					aCanvas  text: 'Topicos: '.					(unaPregunta topicos size > 1)					ifTrue: [(unaPregunta  topicos) 						do: [ :topic | aCanvas text: (topic nombre); text: ', '] ]					ifFalse:[(unaPregunta  topicos) 						do: [ :topic | aCanvas text: (topic nombre)]]].			aCanvas				paragraph: [ aCanvas text: 'Realizada por '.					aCanvas anchor					   id:'nombreUsuario';						callback: [ self irPerfilUsuario: unaPregunta autor ];						with: unaPregunta autor nombre.					aCanvas text: ' | '.					aCanvas text: unaPregunta respuestas size.					aCanvas text: ' Respuestas' ].			aCanvas				paragraph: [ aCanvas text: unaPregunta  cantVotosPositivos.					aCanvas text: ' Likes | '.					aCanvas text: unaPregunta cantVotosNegativos.					aCanvas text: ' Dislikes' ].			aCanvas				paragraph: [					aCanvas anchor						callback: [ unaPregunta registrarLikeDe: self session usuario ];						with: 'Like'.					aCanvas space.					aCanvas text:' | '.					aCanvas space.					aCanvas anchor						callback: [ unaPregunta registrarDisLikeDe: self session usuario];						with: 'Dislike'. ].].					aCanvas horizontalRule! !!AbstractUserHomeComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 19:13'!renderHeader: aCanvasaCanvas div with:[aCanvas div with:[	aCanvas heading		id:'titulo';		level1;		with: 'CuOOra'.].aCanvas div id: 'usuario';with:[	aCanvas anchor      id:'nombreUsuario';		callback: [ self  irPerfilUsuario: self session usuario];		with: self session usuario nombre.		aCanvas space. aCanvas anchor				callback: [ self logOut ];				with: 'Log Out' ].	]. aCanvas horizontalRule.	! !!AbstractUserHomeComponent methodsFor: 'hooks' stamp: 'Anonymous 5/21/2020 17:14'!style	^ ' body { font-family: arial; text-decoration: strong; padding: 5px 20px 20px 20px; }	.panel {  padding: 40px; box-shadow: 0 6px 10px 0 rgba(0,0,0,0.24)  }	#botonNaranja { background-color:darkorange }	#nombreUsuario{color: black; text-decoration: none;font-weight: bold; font-size: 20px }	#titulo{text-aling: left; font-size: 40px}	#formLogin { display: flex; flex-direction: column; align-items: left; justify-content: center;  }	#pieDeRespuesta{text-align: center}	#CuOOra { text-align: left; color: dodgerblue; font-family: arial; font-size: 60px;  } 	#respuesta { text-align: center; }	#tituloPreg{color: black; font-size:20px; text-decoration: none;font-style: oblique}	a {color: blue} 	#logout { text-align: right; padding: 6px 14px; float: right}	#usuario { text-align: right}	button { background-color: dodgerblue; border: none; color: white; padding: 10px 24px; text-align: center; text-decoration: 	none; display: inline-block; font-size: 16px; margin: 4px 2px;  border-radius: 8px; -webkit-transition-duration: 0.4s; 	transition-duration: 0.4s; cursor: pointer;}	button:hover {background-color: dodgerblue; color: white; box-shadow: 0 6px 10px 0 rgba(0,0,0,0.24), 0 17px 50px 0 	rgba(0,0,0,0.19);	#formLogin { display: flex; flex-direction: column; align-items: center; justify-content: center;  }'! !AbstractUserHomeComponent subclass: #AgregarPreguntaComponent	instanceVariableNames: 'titulo desarrollo topicos'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-IU'!!AgregarPreguntaComponent methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 21:36'!desarrollo	^desarrollo.! !!AgregarPreguntaComponent methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 21:37'!desarrollo: unDesarrollo	desarrollo:= unDesarrollo.! !!AgregarPreguntaComponent methodsFor: 'accessing' stamp: 'Anonymous 5/21/2020 15:30'!model  	^ SistemaCuoora soleInstance  ! !!AgregarPreguntaComponent methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 21:36'!titulo: unTitulo		titulo:= unTitulo.! !!AgregarPreguntaComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 19:09'!renderContentOn: aCanvassuper renderContentOn: aCanvas.aCanvas heading		level2;		with: 'Nueva Pregunta'.	aCanvas break.		aCanvas		form: [ aCanvas				paragraph: [ aCanvas label: 'Titulo '.					aCanvas textInput on: #titulo of: self ].			aCanvas				paragraph: [ aCanvas label: 'Desarrollo '.					aCanvas textArea 					on: #desarrollo of: self."				aCanvas				paragraph: [ aCanvas label: 'Topicos (Separados por una coma) '.					aCanvas textInput on: #topicos of: self ]."     			aCanvas 				paragraph: [ 			   aCanvas label: 'Tópico'.				aCanvas select				list:(self model topicos collect:[:each| each nombre]);				on: #topicos of: self.				].			aCanvas button				callback: [ self cancelar ];				with: 'Cancelar'.			aCanvas space.			aCanvas button				callback: [ self guardar ];				with: 'Guardar' ]]! !!AgregarPreguntaComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 17:20'!agregarPregunta	"falta agregar los topicos a las preguntas"	self model agregarPreguntaConTopico: topicos Titulo: titulo  Descripcion: desarrollo YAutor:  self session usuario. ! !!AgregarPreguntaComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 17:24'!crearOAgregarTopicos: topicosPreg		|aux aux2|	aux:= topicosPreg splitOn: ','.	aux:= aux collect:[:nomb| Topico inicializarConNombre: (nomb asString) yDescripcion:'']. "Coleccion de Topico con nombres igresados"	aux2:= OrderedCollection new.	aux do:[:top| (self model topicoEstaRegistrado: top) ifNotNil: [:it| aux2 add:it] ifNil:[self model agregarTopico: top nombre Descripcion:''. aux2 add: top.]		].	^aux2.	! !!AgregarPreguntaComponent methodsFor: 'initialization' stamp: 'Anonymous 5/21/2020 18:43'!initialize 	super initialize.	topicos:= OrderedCollection new.		! !!AgregarPreguntaComponent methodsFor: 'callbacks' stamp: 'Anonymous 5/21/2020 15:39'!topicos	^topicos.! !!AgregarPreguntaComponent methodsFor: 'callbacks' stamp: 'Anonymous 5/21/2020 19:03'!topicos: topicosPreg	topicos add: (self model topicos detect: [:each| each nombre= topicosPreg])	"Convierto String ingresado por usuario en coleccion de strings separando por ',' "! !!AgregarPreguntaComponent methodsFor: 'callbacks' stamp: 'Rocio 4/19/2020 21:35'!titulo	^titulo.! !!AgregarPreguntaComponent methodsFor: 'callbacks' stamp: 'Anonymous 5/21/2020 19:26'!guardar	self agregarPregunta.	self answer.! !AbstractUserHomeComponent subclass: #AgregarRespuestaComponent	instanceVariableNames: 'pregunta texto'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-IU'!!AgregarRespuestaComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 15:21'!renderContentOn: aCanvas	super renderContentOn: aCanvas.	self renderPregunta: pregunta en: aCanvas.	aCanvas		form: [ aCanvas				paragraph: [ aCanvas label: 'RESPUESTA: '.					aCanvas textArea					 on: #texto of: self ].			aCanvas button				callback: [ self cancelar ];				with: 'Cancelar'.			aCanvas space.			aCanvas button				callback: [ self guardar ];				with: 'Guardar' ]! !!AgregarRespuestaComponent methodsFor: 'callbacks' stamp: 'Rocio 4/19/2020 21:00'!texto		^texto.! !!AgregarRespuestaComponent methodsFor: 'callbacks' stamp: 'Anonymous 5/21/2020 18:29'!guardar	pregunta agregarRespuestaConTexto: texto yAutor: self session usuario.	self answer.		! !!AgregarRespuestaComponent methodsFor: 'as yet unclassified' stamp: 'Rocio 4/19/2020 20:53'!inicializarCon: unaPregunta pregunta:= unaPregunta.! !!AgregarRespuestaComponent methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 21:00'!texto: unTexto	texto:= unTexto.! !AbstractUserHomeComponent subclass: #DetallePreguntaComponent	instanceVariableNames: 'pregunta'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-IU'!!DetallePreguntaComponent methodsFor: 'as yet unclassified' stamp: 'Rocio 4/19/2020 19:33'!inicializarCon: unaPregunta 		pregunta:=unaPregunta.! !!DetallePreguntaComponent methodsFor: 'callbacks' stamp: 'Rocio 4/19/2020 20:55'!agregarRespuesta: unaPregunta	self call: (AgregarRespuestaComponent new inicializarCon: unaPregunta). ! !!DetallePreguntaComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 17:15'!renderContentOn: aCanvassuper renderContentOn: aCanvas.	self renderPregunta: pregunta en: aCanvas.	pregunta respuestas 		do: [ :respuesta | 			self renderRespuesta: respuesta on: aCanvas].	aCanvas		paragraph: [ aCanvas  text: 'No hay mas respuestas'].		aCanvas anchor		callback: [ self agregarRespuesta: pregunta ];		with: [ aCanvas button 			id:'botonNaranja';			with: 'Agregar Respuesta' ]! !!DetallePreguntaComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 19:34'!renderRespuesta: unaRespuesta on: aCanvas	aCanvas		paragraph: [ aCanvas text: 'Respuesta de: '.			aCanvas anchor					   id:'nombreUsuario';						callback: [ self irPerfilUsuario: unaRespuesta autor];						with: unaRespuesta autor nombre.].		aCanvas		paragraph: [ aCanvas text: unaRespuesta cantVotosPositivos .			aCanvas text: ' Likes | '.			aCanvas text: unaRespuesta cantVotosNegativos .			aCanvas text: ' Dislikes' ].	aCanvas		paragraph: [ aCanvas anchor				callback: [ unaRespuesta registrarLikeDe: self session usuario ];				with: 'Like'.			aCanvas space.			aCanvas anchor				callback: [ unaRespuesta registrarDisLikeDe: self session usuario ];				with: 'Dislike' ].				aCanvas horizontalRule! !AbstractUserHomeComponent subclass: #HomeCuooraComponent	instanceVariableNames: 'usuario contrasenia'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-IU'!!HomeCuooraComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 17:12'!renderContentOn: aCanvas	super renderContentOn: aCanvas.	aCanvas div 	with:[		aCanvas anchor		callback: [ self nuevaPregunta ];		with: [ aCanvas button 			id:'botonNaranja';			with: 'Hacer una nueva pregunta' ].].	aCanvas heading:'Ultimas preguntas'.	self renderPreguntasOn: aCanvas.	! !!HomeCuooraComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 21:41'!renderPreguntasOn: aCanvas|preg|preg:= (self model preguntasRelevantesPara:  self session usuario) asSortedCollection:[:p1 :p2 | p1 fecha > p2 fecha ]. preg:= preg takeFirst: 5. aCanvas		table: [  preg  do:[:each| self renderPregunta: each en: aCanvas]].! !!HomeCuooraComponent methodsFor: 'accessing' stamp: 'Rocio 5/18/2020 13:37'!model  	^ SistemaCuoora soleInstance  ! !!HomeCuooraComponent methodsFor: 'initialization' stamp: 'Rocio 5/18/2020 13:30'!initialize super initialize ! !!HomeCuooraComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 19:26'!nuevaPregunta	self call: (AgregarPreguntaComponent new). ! !AbstractUserHomeComponent subclass: #LoginUsuarioComponent	instanceVariableNames: 'usuario contrasenia'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-IU'!!LoginUsuarioComponent commentStamp: 'Anonymous 5/21/2020 12:40' prior: 0!|application|"--------------------------------SEASIDE REGISTRO--------------------------------------"application:=WAAdmin register: LoginUsuarioComponent  asApplicationAt: 'login'.application sessionClass: SesionConUsuario."----------------------------------------------------------------------------------------"SistemaCuoora clearSoleInstance .CuooraSamplerLoader new loadExamplesIn: SistemaCuoora soleInstance.!!LoginUsuarioComponent methodsFor: 'private protocol' stamp: 'Anonymous 5/21/2020 19:34'!login 	(self model usuarios detect: [ :each | each nombre = usuario & (each contrasenia  = contrasenia)]			ifNone: [ nil])		ifNotNil: [ :it | self irHome:it ].	usuario := nil.	contrasenia := nil! !!LoginUsuarioComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 12:46'!renderContentOn: aCanvasself renderHeader: aCanvas.	aCanvas div	id: 'formLogin';		with: [ self formularioLogin: aCanvas ].	! !!LoginUsuarioComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 16:33'!renderHeader: aCanvas	aCanvas heading		level1;		id:'titulo';		with: 'CuOOra'.	aCanvas horizontalRule.! !!LoginUsuarioComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 12:48'!formularioLogin:aCanvasaCanvas horizontalRule 		with: [aCanvas div		id: 'formLogin';		with: [ aCanvas form: [aCanvas 				paragraph: [ aCanvas label: 'Nombre de usuario: '.					aCanvas textInput 						callback: [ :valor| self setUsuario:valor];					with: ''.].							aCanvas paragraph: [ aCanvas label: 'Password: '.					aCanvas passwordInput					callback: [ :valor| self setContrasenia:valor];					with: ''.]. 			aCanvas button			callback: [self login ];			with: 'Iniciar sesión'.].]].! !!LoginUsuarioComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 19:20'!irHome: aUserself session usuario:aUser.self call: HomeCuooraComponent new.! !!LoginUsuarioComponent methodsFor: 'accessing' stamp: 'Rocio 5/18/2020 13:16'!model  	^ SistemaCuoora soleInstance  ! !!LoginUsuarioComponent methodsFor: 'initialization' stamp: 'Rocio 5/18/2020 13:15'!setContrasenia:unaPasscontrasenia :=unaPass. ! !!LoginUsuarioComponent methodsFor: 'initialization' stamp: 'Anonymous 5/21/2020 12:47'!initialize	super initialize. ! !!LoginUsuarioComponent methodsFor: 'initialization' stamp: 'Rocio 5/18/2020 13:14'!setUsuario:unUsuariousuario :=unUsuario . ! !AbstractUserHomeComponent subclass: #PerfilUsuarioComponent	instanceVariableNames: 'usuario'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-IU'!!PerfilUsuarioComponent methodsFor: 'as yet unclassified' stamp: 'Anonymous 5/21/2020 14:09'!inicializarCon: unUsuario	usuario:= unUsuario.! !!PerfilUsuarioComponent methodsFor: 'rendering' stamp: 'Anonymous 5/21/2020 17:14'!renderContentOn: aCanvas		super renderContentOn: aCanvas.	aCanvas heading		level2;				with: 'Preguntas de ', usuario nombre.	aCanvas		paragraph: [ aCanvas anchor				callback: [ self follow ];				with: 'Follow' ].	aCanvas		table: [ (usuario preguntas)				do: [ :pregunta | self renderPregunta: pregunta en: aCanvas ] ]! !!PerfilUsuarioComponent methodsFor: 'callback' stamp: 'Anonymous 5/21/2020 14:12'!follow	self session usuario agregarSeguido: usuario.! !!PerfilUsuarioComponent methodsFor: 'accessing' stamp: 'Anonymous 5/21/2020 14:09'!model  	^ SistemaCuoora soleInstance.! !WASession subclass: #SesionConUsuario	instanceVariableNames: 'usuario'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-IU'!!SesionConUsuario methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 16:54'!usuario	^usuario! !!SesionConUsuario methodsFor: 'accessing' stamp: 'Rocio 4/19/2020 17:31'!usuario: unUsuario 	usuario:= unUsuario.! !!SesionConUsuario methodsFor: 'as yet unclassified' stamp: 'Rocio 4/19/2020 22:49'!initialize	super initialize.		! !TestCase subclass: #PostTest	instanceVariableNames: 'post1 unUsuarioA unUsuarioB'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Tests'!!PostTest methodsFor: 'running' stamp: 'Rocio 5/18/2020 01:45'!setUp	"Hooks that subclasses may override to define the fixture of test."	unUsuarioA:= Usuario inicializarConNombre: 'A' yContrasenia:'1234'.	unUsuarioB:= Usuario inicializarConNombre: 'B' yContrasenia:'1234'.	post1 := Post inicializarConAutor: unUsuarioA.! !!PostTest methodsFor: 'as yet unclassified' stamp: 'Rocio 5/18/2020 01:47'!testCalcularPuntaje	self assert:post1 calcularPuntaje equals:0.	   post1 registrarLikeDe: unUsuarioA.	self assert:post1 calcularPuntaje equals:1.		post1 registrarDisLikeDe: unUsuarioB.	self assert:post1 calcularPuntaje equals:0.! !TestCase subclass: #PreguntaTest	instanceVariableNames: 'unUsuarioA unUsuarioB unTopico p1 p2 col r1 r2'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Tests'!!PreguntaTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 12:58'!testAgregarRespuestaConTextoyAutor   self assert: p1 respuestas size equals:0.	r1:= p1 agregarRespuestaConTexto: '1' yAutor: unUsuarioB.	self assert: p1 respuestas size equals:1.	self assert: p2 respuestas size equals:0.	r2:= p2 agregarRespuestaConTexto: '2' yAutor: unUsuarioA.	self assert: p2 respuestas size equals:1.! !!PreguntaTest methodsFor: 'tests' stamp: 'Anonymous 5/21/2020 12:02'!testRespuestasMayorMenor	r1:= p1 agregarRespuestaConTexto: '1'   yAutor: unUsuarioA.	r2:= p1 agregarRespuestaConTexto: '2'   yAutor: unUsuarioB.	   r1 registrarDisLikeDe: unUsuarioB.   self should: p1 respuestasMayorMenor first = r2.    		! !!PreguntaTest methodsFor: 'tests' stamp: 'Anonymous 5/21/2020 12:02'!testRespuestasDe	r1:= p1 agregarRespuestaConTexto: '1'   yAutor: unUsuarioB.	r2:= p1 agregarRespuestaConTexto: '2'  yAutor: unUsuarioB.	self assert: (p1 respuestasDe: unUsuarioB) size equals: 2.! !!PreguntaTest methodsFor: 'running' stamp: 'Rocio 5/18/2020 04:36'!setUp		"Hooks that subclasses may override to define the fixture of test."super setUp.unUsuarioA:= Usuario inicializarConNombre: 'A' yContrasenia: '1234'.unUsuarioB:= Usuario inicializarConNombre: 'B' yContrasenia: '1234'.unTopico := Topico inicializarConNombre:'Smalltalk' yDescripcion: 'Todo sobre Smalltalk'.col:=OrderedCollection new .col add:unTopico.p1:=Pregunta inicializarConTopico:col Titulo:'Pregunta1'  Descripcion:  '1'yAutor: unUsuarioA.unUsuarioA agregarPregunta: p1.p2:=Pregunta inicializarConTopico:col Titulo:'Pregunta2'  Descripcion:  '2'yAutor: unUsuarioB.! !TestCase subclass: #SistemaTest	instanceVariableNames: 'unSistema unTopico unUsuario unaPregunta col1 col2'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Tests'!!SistemaTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 03:17'!testBorrarPregunta	unSistema borrarPregunta: unaPregunta.	self assert:unSistema preguntas  size equals:0.	self assert: unaPregunta autor preguntas size equals:0.	self assert: (unaPregunta topicos select:[:topico| topico preguntas= unaPregunta])size equals:0.	self assert: (unaPregunta autor respuestas select:[:respuesta| respuesta pregunta = unaPregunta])size equals:0.	! !!SistemaTest methodsFor: 'tests' stamp: 'Rocio 5/17/2020 20:43'!testAgregarTopico|topico|unSistema topicos remove:unTopico.self assert:unSistema topicos  size equals:0. topico:=unSistema agregarTopico: 'Smallalk' Descripcion: 'Todo sobre Smalltalk'. self assert:unSistema topicos size equals:1.topico:=unSistema agregarTopico: 'Seaside' Descripcion: 'Todo sobre Seaside'. self assert:unSistema topicos size equals:2.self assert: (unSistema topicos detect:[:each|each ==topico ])equals:topico.! !!SistemaTest methodsFor: 'tests' stamp: 'Rocio 5/17/2020 22:50'!testCrearUsuario|usuario2|unSistema usuarios remove:unUsuario.self assert:unSistema usuarios  size equals:0. usuario2 :=unSistema crearUsuario: 'Rocio' contrasenia: '1234'.self assert:unSistema usuarios  size equals:1.self assert: (unSistema usuarios detect:[:each|each == usuario2])equals:usuario2.! !!SistemaTest methodsFor: 'tests' stamp: 'Rocio 5/17/2020 22:38'!testObtenerPreguntasRelevantesPara|t t2 user2 user1 colT colT1 p1 p2|self assert:(unSistema preguntasRelevantesPara: unUsuario) size equals:0.colT:= OrderedCollection new.colT1:= OrderedCollection new.user1:= unSistema   crearUsuario:'A' contrasenia:'1234'.user2:= unSistema   crearUsuario:'B' contrasenia:'1234'.t:=unSistema agregarTopico: 'Objetos' Descripcion: 'Todo sobre Objetos'.t2:=unSistema agregarTopico: 'Programación' Descripcion: 'Todo sobre Programación'.colT add:t.colT1 add:t2.p1:=unSistema agregarPreguntaConTopico:colT Titulo:'¿Qué es la programación orientada a objetos?' Descripcion: 'Objetos' YAutor: user1.p2:=unSistema agregarPreguntaConTopico:colT1 Titulo:'¿Qué es lo más dificil en programacion?' Descripcion: 'Programacion' YAutor: user2.unUsuario agregarSeguido: user1.self assert:(unSistema preguntasRelevantesPara: unUsuario) size equals:1.unUsuario agregarTopicoDeInteres: t2.self assert:(unSistema preguntasRelevantesPara: unUsuario) size equals:2.! !!SistemaTest methodsFor: 'tests' stamp: 'Rocio 5/17/2020 23:24'!testAgregarPregunta|pregunta|unSistema preguntas remove:unaPregunta.self assert:unSistema preguntas  size equals:0.pregunta:=unSistema agregarPreguntaConTopico:col1 Titulo:'¿Qué es la programación orientada a objetos?' Descripcion: 'Objetos' YAutor: unUsuario.self assert:unSistema preguntas  size equals:1.pregunta:=unSistema agregarPreguntaConTopico:col1 Titulo:'¿Qué es lo más dificil en programacion?' Descripcion: 'Programacion' YAutor: unUsuario.self assert:unSistema preguntas size equals:2.self assert: (unSistema preguntas detect:[:each|each ==pregunta ])equals:pregunta.! !!SistemaTest methodsFor: 'running' stamp: 'Rocio 5/17/2020 23:22'!setUp	"Hooks that subclasses may override to define the fixture of test."super setUp.col1:=OrderedCollection new.col2:=OrderedCollection  new.unSistema:= SistemaCuoora new.unTopico:= unSistema agregarTopico: 'Smalltalk' Descripcion: 'Todo sobre Smalltalk'.unUsuario := unSistema crearUsuario: 'Rocio' contrasenia: '1234'.col1 add: unTopico.unaPregunta :=(unSistema agregarPreguntaConTopico:col1 Titulo:'¿Qué es lo más dificil en programacion?' Descripcion: 'Programacion' YAutor: unUsuario).col2 add: unaPregunta.! !TestCase subclass: #TopicoTest	instanceVariableNames: 'unUsuarioA unUsuarioB unTopico p1 p2 col'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Tests'!!TopicoTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 04:13'!testBorrarPregunta 	unTopico agregarPregunta: p1.	unTopico agregarPregunta: p2.	unTopico borrarPregunta: p1.	self assert: unTopico preguntas size equals:1.	unTopico borrarPregunta: p2.	self assert: unTopico preguntas size equals:0.! !!TopicoTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 04:09'!testAgregarPregunta    self assert: unTopico preguntas size equals: 0.	unTopico agregarPregunta: p1.	self assert: unTopico preguntas size equals: 1.	unTopico agregarPregunta: p2.	self assert: unTopico preguntas size equals: 2.! !!TopicoTest methodsFor: 'running' stamp: 'Rocio 5/18/2020 04:07'!setUpsuper setUp.unUsuarioA:= Usuario inicializarConNombre: 'A' yContrasenia: '1234'.unUsuarioB:= Usuario inicializarConNombre: 'B' yContrasenia: '1234'.unTopico := Topico inicializarConNombre:'Smalltalk' yDescripcion: 'Todo sobre Smalltalk'.col:=OrderedCollection new .col add:unTopico.p1:=Pregunta inicializarConTopico:col Titulo:'Pregunta1'  Descripcion:  '1'yAutor: unUsuarioA.unUsuarioA agregarPregunta: p1.p2:=Pregunta inicializarConTopico:col Titulo:'Pregunta2'  Descripcion:  '2'yAutor: unUsuarioB.! !TestCase subclass: #UsuarioTest	instanceVariableNames: 'unUsuarioA unUsuarioB unTopico topico2 p1 p2 col'	classVariableNames: ''	poolDictionaries: ''	category: 'CuOOra-Martinez-Tests'!!UsuarioTest methodsFor: 'as yet unclassified' stamp: 'Rocio 5/18/2020 03:24'!testEstaRegistradoEnSeguidos	unUsuarioA agregarSeguido: unUsuarioB.	self should: (unUsuarioA estaRegistradoEnSeguidos: unUsuarioB).	self deny: (unUsuarioB estaRegistradoEnSeguidos: unUsuarioA).! !!UsuarioTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 00:39'!testAgregarTopicoDeInteres		self assert: unUsuarioA topicosInteres  size equals:0.unUsuarioA agregarTopicoDeInteres:  unTopico.self assert: unUsuarioA topicosInteres    size equals:1.unUsuarioA agregarTopicoDeInteres:  topico2.self assert: unUsuarioA topicosInteres  size equals:2.! !!UsuarioTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 00:21'!testBorrarPregunta unUsuarioA preguntas remove: p1.self assert: unUsuarioA preguntas  size equals:0.! !!UsuarioTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 03:12'!testCalcularPuntajeUsuario	|resp|		self assert: unUsuarioA calcularPuntajeUsuario equals:20.	resp:= Respuesta inicializarconTexto: 'unTexto' pregunta: p2 yAutor:unUsuarioA.	unUsuarioA agregarRespuesta: resp.	self assert: unUsuarioA calcularPuntajeUsuario equals:70.	unUsuarioA borrarPregunta: p1.	self assert: unUsuarioA calcularPuntajeUsuario equals:50.	unUsuarioA borrarRespuesta: resp.	self assert: unUsuarioA calcularPuntajeUsuario equals:0.		! !!UsuarioTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 03:54'!testTotalPuntajeLikesDislikes|resp|	self assert: unUsuarioA totalPuntajeLikesDislikes equals: 0.		unUsuarioA agregarPregunta: p2.	self assert: unUsuarioA totalPuntajeLikesDislikes equals: 0.		resp:= Respuesta inicializarconTexto: 'unTexto' pregunta: p2 yAutor:unUsuarioA.	unUsuarioA agregarRespuesta: resp.	self assert: unUsuarioA totalPuntajeLikesDislikes equals: 0. 	p2 registrarDisLikeDe: unUsuarioA.	self assert: unUsuarioA totalPuntajeLikesDislikes equals: -1.	   p2 registrarDisLikeDe: unUsuarioB.   self assert: unUsuarioA totalPuntajeLikesDislikes equals: -2.   p2 registrarLikeDe: unUsuarioA.  self assert: unUsuarioA totalPuntajeLikesDislikes equals: 0.! !!UsuarioTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 00:34'!testAgregarSeguidoself assert: unUsuarioA seguidos  size equals:0.unUsuarioA agregarSeguido: unUsuarioB.self assert: unUsuarioA seguidos   size equals:1.unUsuarioA agregarSeguido: unUsuarioB.self assert: unUsuarioA seguidos   size equals:1.	! !!UsuarioTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 03:26'!testEstaRegistradoEnTopicos	unUsuarioA agregarTopicoDeInteres: unTopico.	self should: (unUsuarioA estaRegistradoEnTopicos: unTopico).	self deny: (unUsuarioB estaRegistradoEnTopicos: unTopico).! !!UsuarioTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 03:14'!testBorrarRespuesta|resp|self assert: unUsuarioA respuestas  size equals:0.resp:= Respuesta inicializarconTexto: 'unTexto' pregunta: p2 yAutor:unUsuarioA.unUsuarioA agregarRespuesta: resp.self assert: unUsuarioA respuestas  size equals:1.unUsuarioA  borrarRespuesta: resp.self assert: unUsuarioA respuestas  size equals:0.! !!UsuarioTest methodsFor: 'tests' stamp: 'Rocio 5/18/2020 00:29'!testAgregarRespuesta|r1 r2|r1:= Respuesta inicializarconTexto: 'Respuesta 1' pregunta: '1' yAutor:unUsuarioA.r2:= Respuesta inicializarconTexto: 'Respuesta 2' pregunta: '2' yAutor:unUsuarioA.unUsuarioA agregarRespuesta:  r1.self assert: unUsuarioA respuestas  size equals:1.unUsuarioA agregarRespuesta:  r2.self assert: unUsuarioA respuestas  size equals:2.! !!UsuarioTest methodsFor: 'running' stamp: 'Rocio 5/18/2020 02:52'!setUp	"Hooks that subclasses may override to define the fixture of test."super setUp.unUsuarioA:= Usuario inicializarConNombre: 'A' yContrasenia: '1234'.unUsuarioB:= Usuario inicializarConNombre: 'B' yContrasenia: '1234'."r1:=Publicación autor:unUsuario  texto:'bye bye birdie'.r2:= Publicación autor:unUsuario  texto:'estancia los naranjos'.r3:=Publicación autor:otroUsuario texto:'mas cafés y menos cervecerías'."unTopico := Topico inicializarConNombre:'Smalltalk' yDescripcion: 'Todo sobre Smalltalk'.topico2:=Topico inicializarConNombre:'Objetos' yDescripcion: 'Todo sobre Objetos'.col:=OrderedCollection new .col add:unTopico.p1:=Pregunta inicializarConTopico:col Titulo:'Pregunta1'  Descripcion:  '1'yAutor: unUsuarioA.unUsuarioA agregarPregunta: p1.p2:=Pregunta inicializarConTopico:col Titulo:'Pregunta2'  Descripcion:  '2'yAutor: unUsuarioB.! !